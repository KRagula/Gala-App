{"ast":null,"code":"import axios from 'axios';\nimport dotenv from 'dotenv'; //dotenv.config({ path: '../../.env' });\n\nexport const login = credentials => {\n  axios.post(`http://localhost:8080/login`, credentials, {\n    withCredentials: true\n  }).then(response => {\n    if (response.data.data == 'data') {\n      //document.cookie='firstname='+response.data.firstname+';max-age=3600'\n      //document.cookie='lastname='+response.data.lastname+';max-age=3600'\n      // document.cookie('firstname', response.data.firstname)\n      // document.cookie('lastname', response.data.lastname)\n      //console.log(response.getResponseHeader('Set-Cookie'))\n      //console.log(response.headers.cookie)\n      window.location = '/explore';\n    }\n  }).catch(error => {\n    if (error.response.status == '409') {\n      document.getElementById('errorArea').innerHTML = \"Incorrect Password or User Doesn't Exist\";\n    } else {\n      document.getElementById('errorArea').innerHTML = \"Incorrect Password or User Doesn't Exist\";\n    }\n  });\n};\nexport const signup = registered => {\n  axios.post(`http://localhost:8080/signup`, registered, {\n    withCredentials: true\n  }).then(response => {\n    if (response.data.data == 'data') {\n      // document.cookie = 'firstname=' + response.data.firstname + ';max-age=3600';\n      // document.cookie = 'lastname=' + response.data.lastname + ';max-age=3600';\n      // document.cookie('firstname', response.data.firstname)\n      // document.cookie('lastname', response.data.lastname)\n      //console.log(response.getResponseHeader('Set-Cookie'))\n      //console.log(response.headers.cookie)\n      window.location = '/explore';\n    }\n  }).catch(error => {\n    if (error.response.status == '409') {\n      document.getElementById('errorArea').innerHTML = 'Error User Exists';\n    } else {\n      document.getElementById('errorArea').innerHTML = 'Service Unavailable, please try again later';\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Kanishka/Documents/School Work/Penn 2021-2022/Semester 2/CIS 401/Gala-App/gala-app/src/axios/credentials.js"],"names":["axios","dotenv","login","credentials","post","withCredentials","then","response","data","window","location","catch","error","status","document","getElementById","innerHTML","signup","registered"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AAEA,OAAO,MAAMC,KAAK,GAAGC,WAAW,IAAI;AACnCH,EAAAA,KAAK,CACHI,IADF,CACQ,6BADR,EACsCD,WADtC,EACmD;AAAEE,IAAAA,eAAe,EAAE;AAAnB,GADnD,EAEEC,IAFF,CAEOC,QAAQ,IAAI;AACjB,QAAIA,QAAQ,CAACC,IAAT,CAAcA,IAAd,IAAsB,MAA1B,EAAkC;AACjC;AACA;AACA;AACA;AACA;AACA;AACAC,MAAAA,MAAM,CAACC,QAAP,GAAkB,UAAlB;AACA;AACD,GAZF,EAaEC,KAbF,CAaQC,KAAK,IAAI;AACf,QAAIA,KAAK,CAACL,QAAN,CAAeM,MAAf,IAAyB,KAA7B,EAAoC;AACnCC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,SAArC,GAAiD,0CAAjD;AACA,KAFD,MAEO;AACNF,MAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,SAArC,GAAiD,0CAAjD;AACA;AACD,GAnBF;AAoBA,CArBM;AAuBP,OAAO,MAAMC,MAAM,GAAGC,UAAU,IAAI;AACnClB,EAAAA,KAAK,CACHI,IADF,CACQ,8BADR,EACuCc,UADvC,EACmD;AAAEb,IAAAA,eAAe,EAAE;AAAnB,GADnD,EAEEC,IAFF,CAEOC,QAAQ,IAAI;AACjB,QAAIA,QAAQ,CAACC,IAAT,CAAcA,IAAd,IAAsB,MAA1B,EAAkC;AACjC;AACA;AACA;AACA;AACA;AACA;AACAC,MAAAA,MAAM,CAACC,QAAP,GAAkB,UAAlB;AACA;AACD,GAZF,EAaEC,KAbF,CAaQC,KAAK,IAAI;AACf,QAAIA,KAAK,CAACL,QAAN,CAAeM,MAAf,IAAyB,KAA7B,EAAoC;AACnCC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,SAArC,GAAiD,mBAAjD;AACA,KAFD,MAEO;AACNF,MAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,SAArC,GACC,6CADD;AAEA;AACD,GApBF;AAqBA,CAtBM","sourcesContent":["import axios from 'axios';\r\nimport dotenv from 'dotenv';\r\n\r\n//dotenv.config({ path: '../../.env' });\r\n\r\nexport const login = credentials => {\r\n\taxios\r\n\t\t.post(`http://localhost:8080/login`, credentials, { withCredentials: true })\r\n\t\t.then(response => {\r\n\t\t\tif (response.data.data == 'data') {\r\n\t\t\t\t//document.cookie='firstname='+response.data.firstname+';max-age=3600'\r\n\t\t\t\t//document.cookie='lastname='+response.data.lastname+';max-age=3600'\r\n\t\t\t\t// document.cookie('firstname', response.data.firstname)\r\n\t\t\t\t// document.cookie('lastname', response.data.lastname)\r\n\t\t\t\t//console.log(response.getResponseHeader('Set-Cookie'))\r\n\t\t\t\t//console.log(response.headers.cookie)\r\n\t\t\t\twindow.location = '/explore';\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tif (error.response.status == '409') {\r\n\t\t\t\tdocument.getElementById('errorArea').innerHTML = \"Incorrect Password or User Doesn't Exist\";\r\n\t\t\t} else {\r\n\t\t\t\tdocument.getElementById('errorArea').innerHTML = \"Incorrect Password or User Doesn't Exist\";\r\n\t\t\t}\r\n\t\t});\r\n};\r\n\r\nexport const signup = registered => {\r\n\taxios\r\n\t\t.post(`http://localhost:8080/signup`, registered, { withCredentials: true })\r\n\t\t.then(response => {\r\n\t\t\tif (response.data.data == 'data') {\r\n\t\t\t\t// document.cookie = 'firstname=' + response.data.firstname + ';max-age=3600';\r\n\t\t\t\t// document.cookie = 'lastname=' + response.data.lastname + ';max-age=3600';\r\n\t\t\t\t// document.cookie('firstname', response.data.firstname)\r\n\t\t\t\t// document.cookie('lastname', response.data.lastname)\r\n\t\t\t\t//console.log(response.getResponseHeader('Set-Cookie'))\r\n\t\t\t\t//console.log(response.headers.cookie)\r\n\t\t\t\twindow.location = '/explore';\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tif (error.response.status == '409') {\r\n\t\t\t\tdocument.getElementById('errorArea').innerHTML = 'Error User Exists';\r\n\t\t\t} else {\r\n\t\t\t\tdocument.getElementById('errorArea').innerHTML =\r\n\t\t\t\t\t'Service Unavailable, please try again later';\r\n\t\t\t}\r\n\t\t});\r\n};\r\n"]},"metadata":{},"sourceType":"module"}